---
# tasks file for nginx
- name: Install required dependencies for building Nginx from source
  apt:
    name: "{{ item }}"
    state: "present"
  with_items: 
    - "{{ required_dependencies }}"


- name: Download Nginx source code
  get_url:
    url: "https://nginx.org/download/{{ nginx_version }}.tar.gz"
    dest: "/tmp/{{ nginx_version }}.tar.gz"
    mode: '0644'

- name: Extract Nginx source code
  unarchive:
    src: "/tmp/{{ nginx_version }}.tar.gz"
    dest: /tmp
    remote_src: yes
    creates: "/tmp/{{ nginx_version }}"

- name: Configure Nginx
  command: ./configure --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fPIC -Wdate-time -D_FORTIFY_SOURCE=2' \
            --with-ld-opt='-Wl,-Bsymbolic-functions -fPIC' \
            --prefix=/usr/share/nginx \
            --conf-path=/etc/nginx/nginx.conf \
            --http-log-path=/var/log/nginx/access.log \
            --error-log-path=/var/log/nginx/error.log \
            --lock-path=/var/lock/nginx.lock \
            --pid-path=/run/nginx.pid \
            --http-client-body-temp-path=/var/lib/nginx/body \
            --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
            --http-proxy-temp-path=/var/lib/nginx/proxy \
            --http-scgi-temp-path=/var/lib/nginx/scgi \
            --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
            --with-debug \
            --with-pcre-jit \
            --with-http_v2_module \
            --with-http_slice_module \
            --with-http_stub_status_module \
            --with-http_realip_module \
            --with-http_auth_request_module \
            --with-threads \
            --with-http_gzip_static_module
  args:
    chdir: "/tmp/{{ nginx_version }}"

- name: Build Nginx
  command: make
  args:
    chdir: "/tmp/{{ nginx_version }}"

- name: Install Nginx
  command: make install
  args:
    chdir: "/tmp/{{ nginx_version }}"

- name: Find Nginx installation directory
  find:
    paths: "{{ prefix }}"
    patterns: "nginx"
    file_type: directory
  register: nginx_result

- name: Display Nginx installation directory
  debug:
      var: nginx_result.files[0].path
- name: Create a directory
  file:
      path: /var/lib/nginx
      state: directory
      mode: "0755"

- name: Copy the systemd service file using Jinja2 template
  template:
    src: nginx.service.j2
    dest: /etc/systemd/system/nginx.service
    owner: root
    group: root
    mode: '0644'
  notify: Retart Nginx
  register: result
 
- name: Reload systemd daemon to pick up the new service file
  systemd:
    daemon_reload: yes

- name: Show result
  debug:
    msg: "{{ result }}"

- name: Creating environment variable via file in /etc/profile.d
  args:
   chdir: /etc/profile.d
  shell: echo "export NGINX_HOME={{ prefix }}/sbin" > env.sh